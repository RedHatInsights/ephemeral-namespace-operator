---
apiVersion:  apiextensions.k8s.io/v1
kind:         CustomResourceDefinition
metadata:
  annotations:  
    controller-gen.kubebuilder.io/version: v0.6.2
    include.release.openshift.io/ibm-cloud-managed: "true"
    include.release.openshift.io/self-managed-high-availability: "true"
    include.release.openshift.io/single-node-developer: "true"
  creationTimestamp:  null
  name:         subscriptions.operators.coreos.com
  namespace:    none
Spec:
  group:       operators.coreos.com
  names:
    kind:       Subscription
    listKind:  SubscriptionList
    plural:     subscriptions
    shortNames:
    - sub
    - subs
    singular:  subscription
  scope:       Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description:  Subscription keeps operators up to date by tracking changes to Catalogs.
        properties:
          apiVersion:
            description:  'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type:         "string"
          kind:
            description:  'kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type:         "string"
          metadata:
            type:  "object"
          Spec:
            description:  SubscriptionSpec defines an Application that can be installed
            Properties:
              Channel:
                type:  "string"
              Config:
                description:  SubscriptionConfig contains configuration specified for a subscription.
                Properties:
                  env:
                    description:  Env is a list of environment variables to set in the container. Cannot be updated.
                    Items:
                      description:  EnvVar represents an environment variable present in a Container.
                      Properties:
                        Name:
                          description:  Name of the environment variable. Must be a C_IDENTIFIER.
                          type:         "string"
                        Value:
                          description:  'Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                          type:         "string"
                        valueFrom:
                          description:  Source for the environment variable's value. Cannot be used if value is not empty.
                          Properties:
                            configMapKeyRef:
                              description:  Selects a key of a ConfigMap.
                              Properties:
                                Key:
                                  description:  The key to select.
                                  type:         "string"
                                Name:
                                  description:  'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                  type:         "string"
                                Optional:
                                  description:  Specify whether the ConfigMap or its key must be defined
                                  type:         "boolean"
                              Required: key
                              type:  "object"
                            fieldRef:
                              description:  'Selects a field of the pod: supports spec.name, spec.namespace, spec.labels[<KEY>], `spec.annotations[<KEY>], spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.'
                              Properties:
                                apiVersion:
                                  description:  Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                  type:         "string"
                                fieldPath:
                                  description:  Path of the field to select in the specified apiVersion.
                                  type:         "string"
                              Required: fieldPath
                              type:  object
                            resourceFieldRef:
                              description:  'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.'
                              Properties:
                                containerName:
                                  description:  'containerName: required for volumes, optional for env vars'
                                  type:         "string"
                                Divisor:
                                  anyOf:
                                  - type:                              integer
                                  - type:                              string
                                  description:                         Specifies the output format of the exposed resources, defaults to "1"
                                  Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  X - Kubernetes - Int - Or - String:  true
                                Resource:
                                  description:  'Required: resource to select'
                                  type:         string
                              Required: resource
                              type:  object
                            secretKeyRef:
                              description:  Selects a key of a secret in the pod's namespace
                              Properties:
                                Key:
                                  description:  The key of the secret to select from.  Must be a valid secret key.
                                  type:         string
                                Name:
                                  description:  'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                  type:         string
                                Optional:
                                  description:  Specify whether the Secret or its key must be defined
                                  type:         boolean
                              Required: key
                              type:  object
                          type:      object
                      Required: name
                      type:  object
                    type:    array
                  envFrom:
                    description:  EnvFrom is a list of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Immutable.
                    items:
                      description:  EnvFromSource represents the source of a set of ConfigMaps
                      Properties:
                        configMapRef:
                          description:  The ConfigMap to select from
                          Properties:
                            Name:
                              description:  "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                              type:         string
                            Optional:
                              description:  Specify whether the ConfigMap must be defined
                              type:         boolean
                          type:  "object"
                        Prefix:
                          description:  An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
                          type:         string
                        secretRef:
                          description:  The Secret to select from
                          Properties:
                            Name:
                              description:  "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                              type:         string
                            Optional:
                              description:  Specify whether the Secret must be defined
                              type:         boolean
                          type: object
                      type: object
                    type: array
                  nodeSelector:
                    description:  "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a nodes labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/"
                    type:         object
                  resources:
                    description:  "Resources represents compute resources required by this container. Immutable. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/"
                    Properties:
                      Limits:
                        additionalProperties:
                          type:                              string
                          Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          #X - Kubernetes - Int - Or - String:  true
                        description:                           "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                        type:                                  object
                      Requests:
                        additionalProperties:
                          type:                              string
                          Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          #X - Kubernetes - Int - Or - String:  true
                        description:                           "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                        type:                                  object
                    type:                                      object
                  selector:
                    description:  Selector is the label selector for pods to be configured. Existing ReplicaSets whose pods are selected by this will be the ones affected by this deployment. It must match the pod template's labels.
                    Properties:
                      matchExpressions:
                        description:  matchExpressions is a list of label selector requirements. The requirements are ANDed.
                        Items:
                          description:  A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                          Properties:
                            Key:
                              description:  key is the label key that the selector applies to.
                              type:         string
                            Operator:
                              description:  operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                              type:         string
                            Values:
                              description:  values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                              Items:
                                type:  string
                              type:    array
                          Required: key
                            operator
                          type:  object
                        type:    array
                      MatchLabels:
                        additionalProperties:
                          type:       string
                        description:  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type:         object
                    type:             object
                  tolerations:
                    description:  Tolerations are the pod's tolerations.
                    Items:
                      description:  The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
                      Properties:
                        Effect:
                          description:  Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                          type:         string
                        Key:
                          description:  Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                          type:         string
                        Operator:
                          description:  Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
                          type:         string
                        Toleration Seconds:
                          description:  TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
                          Format:       int64
                          type:         integer
                        Value:
                          description:  Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
                          type:         string
                      type:             object
                    type:               array
                  volumeMounts:
                    description:  List of VolumeMounts to set in the container.
                    Items:
                      description:  VolumeMount describes a mounting of a Volume within a container.
                      Properties:
                        Mount Path:
                          description:  Path within the container at which the volume should be mounted.  Must not contain ':'.
                          type:         string
                        Mount Propagation:
                          description:  mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
                          type:         string
                        Name:
                          description:  This must match the Name of a Volume.
                          type:         string
                        Read Only:
                          description:  Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
                          type:         boolean
                        Sub Path:
                          description:  Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
                          type:         string
                        Sub Path Expr:
                          description:  Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
                          type:         string
                      Required:
                      - mountPath
                      - name
                      type:  object
                    type:    array
                  volumes:
                    description:  List of Volumes to set in the podSpec.
                    Items:
                      description:  Volume represents a named volume in a pod that may be accessed by any container in the pod.
                      Properties:
                        Aws Elastic Block Store:
                          description:  "AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore"
                          Properties:
                            Fs type:
                              description:  'Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore TODO: how do we prevent errors in the filesystem from compromising the machine'
                              type:         string
                            Partition:
                              description:  'The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).'
                              Format:       int32
                              type:         integer
                            Read Only:
                              description:  'Specify "true" to force and set the ReadOnly property in VolumeMounts to "true". If omitted, the default is "false". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                              type:         boolean
                            Volume ID:
                              description:  'Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                              type:         string
                          Required: volumeID
                          type:  object
                        Azure Disk:
                          description:  AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
                          Properties:
                            Caching Mode:
                              description:  "Host Caching mode: None, Read Only, Read Write."
                              type:         string
                            Disk Name:
                              description:  The Name of the data disk in the blob storage
                              type:         string
                            Disk URI:
                              description:  The URI the data disk in the blob storage
                              type:         string
                            Fs type:
                              description:  Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              type:         string
                            kind:
                              description:  "Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared"
                              type:         string
                            Read Only:
                              description:  Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              type:         boolean
                          Required:
                          - diskName
                          - diskURI
                          type:  object
                        Azure File:
                          description:  AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
                          Properties:
                            Read Only:
                              description:  Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              type:         boolean
                            Secret Name:
                              description:  the name of secret that contains Azure Storage Account Name and Key
                              type:         string
                            Share Name:
                              description:  Share Name
                              type:         string
                          Required:
                          - secretName
                          - shareName
                          type:  object
                        Cephfs:
                          description:  CephFS represents a Ceph FS mount on the host that shares a pod's lifetime
                          Properties:
                            Monitors:
                              description:  "Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it"
                              Items:
                                type:  string
                              type:    array
                            Path:
                              description:  "Optional: Used as the mounted root, rather than the full Ceph tree, default is /"
                              type:         string
                            Read Only:
                              description:  "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it"
                              type:         boolean
                            Secret File:
                              description:  "Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it"
                              type:         string
                            secretRef:
                              description:  "Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it"
                              Properties:
                                Name:
                                  description:  "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                  type:         string
                              type:             object
                            User:
                              description:  "Optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it"
                              type:         string
                          Required:
                          - monitors
                          type:  object
                        Cinder:
                          description:  "Cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md"
                          Properties:
                            Fs type:
                              description:  'Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                              type:         string
                            Read Only:
                              description:  'Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                              type:         boolean
                            secretRef:
                              description:  "Optional: points to a secret object containing parameters used to connect to OpenStack."
                              Properties:
                                Name:
                                  description:  "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                  type:         string
                              type:             object
                            Volume ID:
                              description:  "volume id used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md"
                              type:         string
                          Required:
                          - volumeID
                          type:  object
                        Config Map:
                          description:  ConfigMap represents a configMap that should populate this volume
                          Properties:
                            Default Mode:
                              description:  "Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set."
                              Format:       int32
                              type:         integer
                            Items:
                              description:  If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
                              Items:
                                description:  Maps a string key to a path within a volume.
                                Properties:
                                  Key:
                                    description:  The key to project.
                                    type:         string
                                  Mode:
                                    description:  "Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set."
                                    Format:       int32
                                    type:         integer
                                  Path:
                                    description:  The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
                                    type:         string
                                Required:
                                - key
                                - path
                                type:  object
                              type:    array
                            Name:
                              description:  "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                              type:         string
                            Optional:
                              description:  Specify whether the ConfigMap or its keys must be defined
                              type:         boolean
                          type:             object
                        Csi:
                          description:  CSI (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature).
                          Properties:
                            Driver:
                              description:  Driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.
                              type:         string
                            Fs type:
                              description:  Filesystem type to mount. Ex. "ext4", "xfs", "ntfs". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.
                              type:         string
                            Node Publish secretRef:
                              description:  NodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secretReferences are passed.
                              Properties:
                                Name:
                                  description:  "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                  type:         string
                              type:             object
                            Read Only:
                              description:  Specifies a read-only configuration for the volume. Defaults to false (read/write).
                              type:         boolean
                            VolumeAttributes:
                              additionalProperties:
                                type:       string
                              description:  VolumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.
                              type:         object
                          Required:
                          - driver
                          type:  object
                        Downward API:
                          description:  DownwardAPI represents downward API about the pod that should populate this volume
                          Properties:
                            Default Mode:
                              description:  "Optional: mode bits to use on created files by default. Must be a Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set."
                              Format:       int32
                              type:         integer
                            Items:
                              description:  Items is a list of downward API volume file
                              Items:
                                description:  DownwardAPIVolumeFile represents information to create the file containing the pod field
                                Properties:
                                  fieldRef:
                                    description:  "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported."
                                    Properties:
                                      apiVersion:
                                        description:  Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                        type:         string
                                      Field Path:
                                        description:  Path of the field to select in the specified apiVersion.
                                        type:         string
                                    Required:
                                    - fieldPath
                                    type:  object
                                  Mode:
                                    description:  "Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set."
                                    Format:       int32
                                    type:         integer
                                  Path:
                                    description:  "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'"
                                    type:         string
                                  resourceFieldRef:
                                    description:  "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported."
                                    Properties:
                                      containerName:
                                        description:  "containerName: required for volumes, optional for env vars"
                                        type:         string
                                      Divisor:
                                        anyOf:
                                        - type:                              integer
                                        - type:                              string
                                        description:                         Specifies the output format of the exposed resources, defaults to "1"
                                        Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        X - Kubernetes - Int - Or - String:  true
                                      Resource:
                                        description:  "Required: resource to select"
                                        type:         string
                                    Required:
                                    - resource
                                    type:  object
                                Required:
                                - path
                                type:  object
                              type:    array
                          type:        object
                        Empty Dir:
                          description:  "EmptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir"
                          Properties:
                            Medium:
                              description:  "What type of storage medium should back this directory. The default is an empty string which means to use the nodes default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir"
                              type:         string
                            Size Limit:
                              anyOf:
                              - type:                              integer
                              - type:                              string
                              description:                         "Total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir"
                              Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              X - Kubernetes - Int - Or - String:  true
                          type:                                    object
                        Ephemeral:
                          description:  "Ephemeral represents a volume that is handled by a cluster storage driver. The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts, and deleted when the pod is removed. 
                            Use this if: a) the volume is only needed while the pod runs, b) features of normal volumes like restoring from snapshot or capacity    tracking are needed, c) the storage driver is specified through a storage class, and d) the storage driver supports dynamic volume provisioning through    
                            a PersistentVolumeClaim (see EphemeralVolumeSource for more    information on the connection between this volume type    and PersistentVolumeClaim).
                            Use PersistentVolumeClaim or one of the vendor-specific APIs for volumes that persist for longer than the lifecycle of an individual pod. 
                            Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to be used that way - see the documentation of the driver for more information. 
                            A pod can use both types of ephemeral volumes and persistent volumes at the same time. 
                            This is a beta feature and only available when the GenericEphemeralVolume feature gate is enabled."
                          Properties:
                            Volume Claim Template:
                              description:  Will be used to create a stand-alone PVC to provision the volume. The pod in which this EphemeralVolumeSource is embedded will be the owner of the PVC, i.e. the PVC will be deleted together with the pod.  
                                The name of the PVC will be `<pod name>-<volume name>` where `<volume name>` is the name from the `PodSpec.Volumes` array entry. Pod validation will reject the pod if the concatenated name is not valid for a PVC (for example, too long). 
                                An existing PVC with that name that is not owned by the pod will *not* be used for the pod to avoid using an unrelated volume by mistake. Starting the pod is then blocked until the unrelated PVC is removed. If such a pre-created PVC is meant 
                                to be used by the pod, the PVC has to updated with an owner reference to the pod once the pod exists. Normally this should not be necessary, but it may be useful when manually reconstructing a broken cluster. 
                                This field is read-only and no changes will be made by Kubernetes to the PVC after it has been created. 
                                Required, must not be nil.
                              Properties:
                                spec:
                                  description:  May contain labels and annotations that will be copied into the PVC when creating it. No other fields are allowed and will be rejected during validation.
                                  type:         object
                                Spec:
                                  description:  The specification for the PersistentVolumeClaim. The entire content is copied unchanged into the PVC that gets created from this template. The same fields as in a PersistentVolumeClaim are also valid here.
                                  Properties:
                                    Access Modes:
                                      description:  "AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1"
                                      Items:
                                        type:  string
                                      type:    array
                                    Data Source:
                                      description:  "This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field."
                                      Properties:
                                        API Group:
                                          description:  APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified kind must be in the core API group. For any other third-party types, APIGroup is required.
                                          type:         string
                                        kind:
                                          description:  kind is the type of resource being referenced
                                          type:         string
                                        Name:
                                          description:  Name is the name of resource being referenced
                                          type:         string
                                      Required:
                                      - kind
                                      - name
                                      type:  object
                                    Data Source Ref:
                                      description:  "Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef   allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef   preserves all values, and generates an error if a disallowed value is   specified. (Alpha) Using this field requires the AnyVolumeDataSource feature gate to be enabled."
                                      Properties:
                                        API Group:
                                          description:  APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified kind must be in the core API group. For any other third-party types, APIGroup is required.
                                          type:         string
                                        kind:
                                          description:  kind is the type of resource being referenced
                                          type:         string
                                        Name:
                                          description:  Name is the name of resource being referenced
                                          type:         string
                                      Required:
                                      - kind
                                      - name
                                      type:  object
                                    Resources:
                                      description:  "Resources represents the minimum resources the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources"
                                      Properties:
                                        Limits:
                                          additionalProperties:
                                            anyOf:
                                            - type:                              integer
                                            - type:                              string
                                            Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            #X - Kubernetes - Int - Or - String:  true
                                          description:                           "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                          type:                                  object
                                        Requests:
                                          additionalProperties:
                                            anyOf:
                                            - type:                              integer
                                            - type:                              string
                                            Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            #X - Kubernetes - Int - Or - String:  true
                                          description:                           "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                          type:                                  object
                                      type:                                      object
                                    Selector:
                                      description:  A label query over volumes to consider for binding.
                                      Properties:
                                        matchExpressions:
                                          description:  matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          Items:
                                            description:  A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            Properties:
                                              Key:
                                                description:  key is the label key that the selector applies to.
                                                type:         string
                                              Operator:
                                                description:  operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type:         string
                                              Values:
                                                description:  values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                Items:
                                                  type:  string
                                                type:    array
                                            Required:
                                            - key
                                            - operator
                                            type:  object
                                          type:    array
                                        Match Labels:
                                          additionalProperties:
                                            type:       string
                                          description:  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type:         object
                                      type:             object
                                    Storage Class Name:
                                      description:  "Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1"
                                      type:         string
                                    Volume Mode:
                                      description:  volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
                                      type:         string
                                    Volume Name:
                                      description:  VolumeName is the binding reference to the PersistentVolume backing this claim.
                                      type:         string
                                  type:             object
                              Required:
                              - spec
                              type:  object
                          type:      object
                        Fc:
                          description:  FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
                          Properties:
                            Fs type:
                              description:  'Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. TODO: how do we prevent errors in the filesystem from compromising the machine'
                              type:         string
                            Lun:
                              description:  "Optional: FC target lun number"
                              Format:       int32
                              type:         integer
                            Read Only:
                              description:  "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts."
                              type:         boolean
                            Target WW Ns:
                              description:  "Optional: FC target worldwide names (WWNs)"
                              Items:
                                type:  string
                              type:    array
                            Wwids:
                              description:  "Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously."
                              Items:
                                type:  string
                              type:    array
                          type:        object
                        Flex Volume:
                          description:  FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
                          Properties:
                            Driver:
                              description:  Driver is the name of the driver to use for this volume.
                              type:         string
                            Fs type:
                              description:  Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
                              type:         string
                            Options:
                              additionalProperties:
                                type:       string
                              description:  "Optional: Extra command options if any."
                              type:         object
                            Read Only:
                              description:  "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts."
                              type:         boolean
                            secretRef:
                              description:  "Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts."
                              Properties:
                                Name:
                                  description:  "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                  type:         string
                              type:             object
                          Required:
                          - driver
                          type:  object
                        Flocker:
                          description:  Flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running
                          Properties:
                            Dataset Name:
                              description:  Name of the dataset stored as spec -> name on the dataset for Flocker should be considered as deprecated
                              type:         string
                            Dataset UUID:
                              description:  UUID of the dataset. This is unique identifier of a Flocker dataset
                              type:         string
                          type:             object
                        Gce Persistent Disk:
                          description:  "GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"
                          Properties:
                            Fs type:
                              description:  'Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk TODO: how do we prevent errors in the filesystem from compromising the machine'
                              type:         string
                            Partition:
                              description:  'The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                              Format:       int32
                              type:         integer
                            Pd Name:
                              description:  "Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"
                              type:         string
                            Read Only:
                              description:  "ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"
                              type:         boolean
                          Required:
                          - pdName
                          type:  object
                        Git Repo:
                          description:  "GitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container."
                          Properties:
                            Directory:
                              description:  Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.
                              type:         string
                            Repository:
                              description:  Repository URL
                              type:         string
                            Revision:
                              description:  Commit hash for the specified revision.
                              type:         string
                          Required:
                          - repository
                          type:  object
                        Glusterfs:
                          description:  "Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md"
                          Properties:
                            Endpoints:
                              description:  "EndpointsName is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod"
                              type:         string
                            Path:
                              description:  "Path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod"
                              type:         string
                            Read Only:
                              description:  "ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod"
                              type:         boolean
                          Required:
                          - endpoints
                          - path
                          type:  object
                        Host Path:
                          description:  "HostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath --- TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write."
                          Properties:
                            Path:
                              description:  "Path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath"
                              type:         string
                            type:
                              description:  'type for HostPath Volume Defaults to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                              type:         string
                          Required:
                          - path
                          type:  object
                        Iscsi:
                          description:  "ISCSI represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md"
                          Properties:
                            Chap Auth Discovery:
                              description:  whether support iSCSI Discovery CHAP authentication
                              type:         boolean
                            Chap Auth Session:
                              description:  whether support iSCSI Session CHAP authentication
                              type:         boolean
                            Fs type:
                              description:  'Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi TODO: how do we prevent errors in the filesystem from compromising the machine'
                              type:         string
                            Initiator Name:
                              description:  Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.
                              type:         string
                            Iqn:
                              description:  Target iSCSI Qualified Name.
                              type:         string
                            Iscsi Interface:
                              description:  iSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).
                              type:         string
                            Lun:
                              description:  iSCSI Target Lun number.
                              Format:       int32
                              type:         integer
                            Portals:
                              description:  iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
                              Items:
                                type:  string
                              type:    array
                            Read Only:
                              description:  ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.
                              type:         boolean
                            secretRef:
                              description:  CHAP Secret for iSCSI target and initiator authentication
                              Properties:
                                Name:
                                  description:  "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                  type:         string
                              type:             object
                            Target Portal:
                              description:  iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
                              type:         string
                          Required:
                          - iqn
                          - lun
                          - targetPortal
                          type:  object
                        Name:
                          description:  "Volume's name. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                          type:         string
                        Nfs:
                          description:  "NFS represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
                          Properties:
                            Path:
                              description:  "Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
                              type:         string
                            Read Only:
                              description:  "ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
                              type:         boolean
                            Server:
                              description:  "Server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
                              type:         string
                          Required:
                          - path
                          - server
                          type:  object
                        Persistent Volume Claim:
                          description:  "PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
                          Properties:
                            Claim Name:
                              description:  "ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
                              type:         string
                            Read Only:
                              description:  Will force the ReadOnly setting in VolumeMounts. Default false.
                              type:         boolean
                          Required:
                          - claimName
                          type:  object
                        Photon Persistent Disk:
                          description:  PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine
                          Properties:
                            Fs type:
                              description:  Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              type:         string
                            Pd ID:
                              description:  ID that identifies Photon Controller persistent disk
                              type:         string
                          Required:
                          - pdID
                          type:  object
                        Portworx Volume:
                          description:  PortworxVolume represents a portworx volume attached and mounted on kubelets host machine
                          Properties:
                            Fs type:
                              description:  FStype represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
                              type:         string
                            Read Only:
                              description:  Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              type:         boolean
                            Volume ID:
                              description:  VolumeID uniquely identifies a Portworx volume
                              type:         string
                          Required:
                          - volumeID
                          type:  object
                        Projected:
                          description:  Items for all in one resources secrets, configmaps, and downward API
                          Properties:
                            Default Mode:
                              description:  Mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
                              Format:       int32
                              type:         integer
                            Sources:
                              description:  list of volume projections
                              Items:
                                description:  Projection that may be projected along with other supported volume types
                                Properties:
                                  Config Map:
                                    description:  information about the configMap data to project
                                    Properties:
                                      Items:
                                        description:  If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
                                        Items:
                                          description:  Maps a string key to a path within a volume.
                                          Properties:
                                            Key:
                                              description:  The key to project.
                                              type:         string
                                            Mode:
                                              description:  "Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set."
                                              Format:       int32
                                              type:         integer
                                            Path:
                                              description:  The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
                                              type:         string
                                          Required:
                                          - key
                                          - path
                                          type:  object
                                        type:    array
                                      Name:
                                        description:  "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                        type:         string
                                      Optional:
                                        description:  Specify whether the ConfigMap or its keys must be defined
                                        type:         boolean
                                    type:             object
                                  Downward API:
                                    description:  information about the downwardAPI data to project
                                    Properties:
                                      Items:
                                        description:  Items is a list of DownwardAPIVolume file
                                        Items:
                                          description:  DownwardAPIVolumeFile represents information to create the file containing the pod field
                                          Properties:
                                            fieldRef:
                                              description:  "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported."
                                              Properties:
                                                apiVersion:
                                                  description:  Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                                  type:         string
                                                Field Path:
                                                  description:  Path of the field to select in the specified apiVersion.
                                                  type:         string
                                              Required:
                                              - fieldPath
                                              type:  object
                                            Mode:
                                              description:  "Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set."
                                              Format:       int32
                                              type:         integer
                                            Path:
                                              description:  "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'"
                                              type:         string
                                            resourceFieldRef:
                                              description:  "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported."
                                              Properties:
                                                containerName:
                                                  description:  "containerName: required for volumes, optional for env vars"
                                                  type:         string
                                                Divisor:
                                                  anyOf:
                                                  - type:                              integer
                                                  - type:                              string
                                                  description:                         Specifies the output format of the exposed resources, defaults to "1"
                                                  Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                  X - Kubernetes - Int - Or - String:  true
                                                Resource:
                                                  description:  "Required: resource to select"
                                                  type:         string
                                              Required:
                                              - resource
                                              type:  object
                                          Required:
                                          - path
                                          type:  object
                                        type:    array
                                    type:        object
                                  Secret:
                                    description:  information about the secret data to project
                                    Properties:
                                      Items:
                                        description:  If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
                                        Items:
                                          description:  Maps a string key to a path within a volume.
                                          Properties:
                                            Key:
                                              description:  The key to project.
                                              type:         string
                                            Mode:
                                              description:  "Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set."
                                              Format:       int32
                                              type:         integer
                                            Path:
                                              description:  The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
                                              type:         string
                                          Required:
                                          - key
                                          - path
                                          type:  object
                                        type:    array
                                      Name:
                                        description:  "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                        type:         string
                                      Optional:
                                        description:  Specify whether the Secret or its key must be defined
                                        type:         boolean
                                    type:             object
                                  Service Account Token:
                                    description:  information about the serviceAccountToken data to project
                                    Properties:
                                      Audience:
                                        description:  Audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.
                                        type:         string
                                      Expiration Seconds:
                                        description:  ExpirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.
                                        Format:       int64
                                        type:         integer
                                      Path:
                                        description:  Path is the path relative to the mount point of the file to project the token into.
                                        type:         string
                                    Required:
                                    - path
                                    type:  object
                                type:      object
                              type:        array
                          type:            object
                        Quobyte:
                          description:  Quobyte represents a Quobyte mount on the host that shares a pod's lifetime
                          Properties:
                            Group:
                              description:  Group to map volume access to Default is no group
                              type:         string
                            Read Only:
                              description:  ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.
                              type:         boolean
                            Registry:
                              description:  Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes
                              type:         string
                            Tenant:
                              description:  Tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin
                              type:         string
                            User:
                              description:  User to map volume access to Defaults to serivceaccount user
                              type:         string
                            Volume:
                              description:  Volume is a string that references an already created Quobyte volume by name.
                              type:         string
                          Required:
                          - registry
                          - volume
                          type:  object
                        Rbd:
                          description:  "RBD represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md"
                          Properties:
                            Fs type:
                              description:  'Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd TODO: how do we prevent errors in the filesystem from compromising the machine'
                              type:         string
                            Image:
                              description:  "The rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                              type:         string
                            Keyring:
                              description:  "Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                              type:         string
                            Monitors:
                              description:  "A collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                              Items:
                                type:  string
                              type:    array
                            Pool:
                              description:  "The rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                              type:         string
                            Read Only:
                              description:  "ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                              type:         boolean
                            secretRef:
                              description:  "SecretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                              Properties:
                                Name:
                                  description:  "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                  type:         string
                              type:             object
                            User:
                              description:  "The rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                              type:         string
                          Required:
                          - image
                          - monitors
                          type:  object
                        Scale IO:
                          description:  ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
                          Properties:
                            Fs type:
                              description:  Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Default is "xfs".
                              type:         string
                            Gateway:
                              description:  The host address of the ScaleIO API Gateway.
                              type:         string
                            Protection Domain:
                              description:  The name of the ScaleIO Protection Domain for the configured storage.
                              type:         string
                            Read Only:
                              description:  Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              type:         boolean
                            secretRef:
                              description:  SecretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.
                              Properties:
                                Name:
                                  description:  "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                  type:         string
                              type:             object
                            Ssl Enabled:
                              description:  Flag to enable/disable SSL communication with Gateway, default false
                              type:         boolean
                            Storage Mode:
                              description:  Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.
                              type:         string
                            Storage Pool:
                              description:  The ScaleIO Storage Pool associated with the protection domain.
                              type:         string
                            System:
                              description:  The name of the storage system as configured in ScaleIO.
                              type:         string
                            Volume Name:
                              description:  The name of a volume already created in the ScaleIO system that is associated with this volume source.
                              type:         string
                          Required:
                          - gateway
                          - secretRef
                          - system
                          type:  object
                        Secret:
                          description:  "Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret"
                          Properties:
                            Default Mode:
                              description:  "Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set."
                              Format:       int32
                              type:         integer
                            Items:
                              description:  If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
                              Items:
                                description:  Maps a string key to a path within a volume.
                                Properties:
                                  Key:
                                    description:  The key to project.
                                    type:         string
                                  Mode:
                                    description:  "Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set."
                                    Format:       int32
                                    type:         integer
                                  Path:
                                    description:  The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
                                    type:         string
                                Required:
                                - key
                                - path
                                type:  object
                              type:    array
                            Optional:
                              description:  Specify whether the Secret or its keys must be defined
                              type:         boolean
                            Secret Name:
                              description:  "Name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret"
                              type:         string
                          type:             object
                        Storageos:
                          description:  StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
                          Properties:
                            Fs type:
                              description:  Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              type:         string
                            Read Only:
                              description:  Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              type:         boolean
                            secretRef:
                              description:  SecretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.
                              Properties:
                                Name:
                                  description:  "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?"
                                  type:         string
                              type:             object
                            Volume Name:
                              description:  VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.
                              type:         string
                            Volume Namespace:
                              description:  VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to "default" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.
                              type:         string
                          type:             object
                        Vsphere Volume:
                          description:  VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine
                          Properties:
                            Fs type:
                              description:  Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              type:         string
                            Storage Policy ID:
                              description:  Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
                              type:         string
                            Storage Policy Name:
                              description:  Storage Policy Based Management (SPBM) profile name.
                              type:         string
                            Volume Path:
                              description:  Path that identifies vSphere volume vmdk
                              type:         string
                          Required:
                          - volumePath
                          type:  object
                      Required:
                      - name
                      type:  object
                    type:    array
                type:        object
              Install Plan Approval:
                description:  Approval is the user approval policy for an InstallPlan. It must be one of "Automatic" or "Manual".
                type:         string
              Name:
                type:  string
              Source:
                type:  string
              Source Namespace:
                type:  string
              Starting CSV:
                type:  string
            Required:
            - name
            - source
            - sourceNamespace
            type:  object
          Status:
            Properties:
              catalogHealth:
                description:  CatalogHealth contains the Subscription's view of its relevant CatalogSources' status. It is used to determine SubscriptionStatusConditions related to CatalogSources.
                Items:
                  description:  SubscriptionCatalogHealth describes the health of a CatalogSource the Subscription knows about.
                  Properties:
                    CatalogSourceRef:
                      description:  CatalogSourceRef is a reference to a CatalogSource.
                      Properties:
                        apiVersion:
                          description:  apiVersion of the referent.
                          type:         string
                        Field Path:
                          description:  'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no containerName is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                          type:         string
                        kind:
                          description:  "kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                          type:         string
                        Name:
                          description:  "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                          type:         string
                        Namespace:
                          description:  "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/"
                          type:         string
                        Resource Version:
                          description:  "Specific Resource Version to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
                          type:         string
                        UID:
                          description:  "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids"
                          type:         string
                      type:             object
                    Healthy:
                      description:  Healthy is true if the CatalogSource is healthy; false otherwise.
                      type:         boolean
                    additionalProperties:
                      description:  LastUpdated represents the last time that the CatalogSourceHealth changed
                      Format:       date-time
                      type:         string
                  Required:
                  - catalogSourceRef
                  - healthy
                  - lastUpdated
                  type:  object
                type:    array
              Conditions:
                description:  Conditions is a list of the latest available observations about a Subscription's current state.
                Items:
                  description:  SubscriptionCondition represents the latest available observations of a Subscription's state.
                  Properties:
                    Last Heartbeat Time:
                      description:  LastHeartbeatTime is the last time we got an update on a given condition
                      Format:       date-time
                      type:         string
                    Last Transition Time:
                      description:  LastTransitionTime is the last time the condition transit from one status to another
                      Format:       date-time
                      type:         string
                    Message:
                      description:  Message is a human-readable message indicating details about last transition.
                      type:         string
                    Reason:
                      description:  Reason is a one-word CamelCase reason for the condition's last transition.
                      type:         string
                    Status:
                      description:  Status is the status of the condition, one of True, False, Unknown.
                      type:         string
                    type:
                      description:  type is the type of Subscription condition.
                      type:         string
                  Required:
                  - status
                  - type
                  type:  object
                type:    array
              Current CSV:
                description:  CurrentCSV is the CSV the Subscription is progressing to.
                type:         string
              Install Plan Generation:
                description:  InstallPlanGeneration is the current generation of the installplan
                type:         integer
              Install Plan Ref:
                description:  InstallPlanRef is a reference to the latest InstallPlan that contains the Subscription's current CSV.
                Properties:
                  apiVersion:
                    description:  apiVersion of the referent.
                    type:         string
                  Field Path:
                    description:  'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no containerName is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                    type:         string
                  kind:
                    description:  'kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type:         string
                  Name:
                    description:  'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type:         string
                  Namespace:
                    description:  'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type:         string
                  Resource Version:
                    description:  'Specific Resource Version to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type:         string
                  UID:
                    description:  'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type:         string
                type:             object
              Installed CSV:
                description:  InstalledCSV is the CSV currently installed by the Subscription.
                type:         string
              Installplan:
                description:  'Install is a reference to the latest InstallPlan generated for the Subscription. DEPRECATED: InstallPlanRef'
                Properties:
                  apiVersion:
                    type:  string
                  kind:
                    type:  string
                  Name:
                    type:  string
                  Uuid:
                    description:  UID is a type that holds unique ID values, including UUIDs.  Because we don't ONLY use UUIDs, this is an alias to string.  Being a type captures intent and helps make sure that UIDs and names do not get conflated.
                    type:         string
                Required:
                - apiVersion
                - kind
                - name
                - uuid
                type:  object
              LastUpdated:
                description:  LastUpdated represents the last time that the Subscription status was updated.
                Format:       date-time
                type:         string
              Reason:
                description:  Reason is the reason the Subscription was transitioned to its current state.
                type:         string
              State:
                description:  State represents the current state of the Subscription
                type:         string
            Required:
            - lastUpdated
            type:  object
        Required:
        - spec
        - spec
        type:  object
    Served:    true
    Storage:   true
Status:
  AcceptedNames:
    kind:       Subscription
    Listkind:  SubscriptionList
    Plural:     subscriptions
    ShortNames:
    - sub
    - subs
    Singular:  subscription
  Conditions: []
  StoredVersions: []
